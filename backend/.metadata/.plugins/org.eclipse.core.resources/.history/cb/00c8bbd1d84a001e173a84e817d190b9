package com.cdac.controllers;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RestController;

import com.cdac.pojos.User;
import com.cdac.service.UserService;

@CrossOrigin(origins = "http://localhost:3000")
@RestController

public class UserController {

	@Autowired
	private UserService userservice;
	
	@GetMapping("/users")
	public ResponseEntity<List<User>> findAll(){
		List<User> users = userservice.findAll();
		return new ResponseEntity<>(users,HttpStatus.OK);
	}
	
	@PostMapping("/users/saveUser")
	public ResponseEntity<User> createUser(@RequestBody User user){
		user.setRole("User");
		User newUser = userservice.createUser(user);
		return new ResponseEntity<>(newUser,HttpStatus.OK);
	}
	
	@PostMapping("/users/saveAsAdmin")
	public ResponseEntity<User> createUserAsAdmin(@RequestBody User user){
		user.setRole("Admin");
		User newUser = userservice.createUser(user);
		return new ResponseEntity<>(newUser,HttpStatus.OK);
	}
	
	@PostMapping("/users/saveAsTrainer")
	public ResponseEntity<User> createUserAsTrainer(@RequestBody User user){
		user.setRole("Trainer");
		User newUser = userservice.createUser(user);
		return new ResponseEntity<>(newUser,HttpStatus.OK);
	}
	
	@GetMapping("/users/{user_id}")
	public ResponseEntity<?> findById(@PathVariable("user_id") int id){
		Map<String,Object>map= new HashMap<>();
		 User user = userservice.findById(id);
		 map.put("status", "success");
		 map.put("data", user);
		return ResponseEntity.ok(map);
	}
	
	@PutMapping("/users/{user_id}")
	public ResponseEntity<?> updateUser(@PathVariable("user_id") int id, @RequestBody User user){
		System.out.println("in put request");
		User user1 = userservice.update(user);
		return ResponseEntity.ok(user1);
	}
	
	@DeleteMapping("/users/{user_id}")
	public ResponseEntity<?> deleteUser(@PathVariable("user_id") int id){
		System.out.println("here");
		userservice.delete(id);
		String message = "User Got deleted";
		return ResponseEntity.ok(message);
	}
}
